{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabub\\\\OneDrive\\\\Documents\\\\BUH Tech\\\\BUH-Tech\\\\src\\\\elements\\\\Form\\\\index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(props) {\n  _s();\n\n  const {\n    name,\n    value,\n    type,\n    placeholder,\n    className,\n    errorResponse\n  } = props;\n  const [hasError, setHasError] = useState(null);\n  let pattern = '';\n  if (type === 'email') pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (type === 'tel') pattern = '[0-11]*';\n\n  const onChange = event => {\n    const target = {\n      target: {\n        // eslint-disable-next-line object-shorthand\n        name: name,\n        value: event.target.value\n      }\n    };\n\n    if (type === 'email') {\n      if (!pattern.test(event.target.value)) setHasError(errorResponse);else setHasError(null);\n    }\n\n    if (type === 'tel') {\n      if (event.target.validity.valid) props.onChange(target);\n    } else {\n      props.onChange(target);\n    }\n  };\n\n  if (type === 'textarea') {\n    return /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: name,\n      placeholder: placeholder,\n      value: value,\n      className: ['w-95 sm:w-192 lg:w-192.5 xl:w-192.5 p-4 mx-2 mb-6 font-light text-lg text-theme-blue rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-theme-purple', className].join(' '),\n      onChange: onChange,\n      rows: \"9\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (type === 'tel') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-6 mx-2 lg:mx-5 \",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: name,\n        type: type,\n        placeholder: placeholder,\n        pattern: pattern,\n        value: value,\n        className: ['p-4 font-light text-lg text-theme-blue rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-theme-purple', className].join(' '),\n        onChange: onChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-white bg-red-500 p-1 rounded\",\n        children: hasError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col mb-6 mx-2 lg:mx-5 \",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: name,\n      type: type,\n      placeholder: placeholder,\n      value: value,\n      className: ['p-4 font-light text-lg text-theme-blue rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-theme-purple', className].join(' '),\n      onChange: onChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-sm text-white bg-red-500 p-1 rounded\",\n      children: hasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"42bVfxc/LgZEdorCc19Q0IzQ8jQ=\");\n\n_c = Form;\nForm.defaultProps = {\n  errorResponse: 'Please match the requested format.',\n  type: '',\n  placeholder: '',\n  className: ''\n};\nForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  errorResponse: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/mabub/OneDrive/Documents/BUH Tech/BUH-Tech/src/elements/Form/index.js"],"names":["React","useState","PropTypes","Form","props","name","value","type","placeholder","className","errorResponse","hasError","setHasError","pattern","onChange","event","target","test","validity","valid","join","defaultProps","propTypes","string","isRequired","oneOfType","number","func"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Form(props) {\r\n  const {\r\n    name, value, type, placeholder, className, errorResponse,\r\n  } = props;\r\n  const [hasError, setHasError] = useState(null);\r\n  let pattern = '';\r\n  if (type === 'email') pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (type === 'tel') pattern = '[0-11]*';\r\n\r\n  const onChange = (event) => {\r\n    const target = {\r\n      target: {\r\n        // eslint-disable-next-line object-shorthand\r\n        name: name,\r\n        value: event.target.value,\r\n      },\r\n    };\r\n\r\n    if (type === 'email') {\r\n      if (!pattern.test(event.target.value)) setHasError(errorResponse);\r\n      else setHasError(null);\r\n    }\r\n\r\n    if (type === 'tel') {\r\n      if (event.target.validity.valid) props.onChange(target);\r\n    } else {\r\n      props.onChange(target);\r\n    }\r\n  };\r\n\r\n  if (type === 'textarea') {\r\n    return (\r\n      <textarea\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={[\r\n          'w-95 sm:w-192 lg:w-192.5 xl:w-192.5 p-4 mx-2 mb-6 font-light text-lg text-theme-blue rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-theme-purple',\r\n          className,\r\n        ].join(' ')}\r\n        onChange={onChange}\r\n        rows=\"9\"\r\n        required\r\n      />\r\n    );\r\n  }\r\n\r\n  if (type === 'tel') {\r\n    return (\r\n      <div className=\"flex flex-col mb-6 mx-2 lg:mx-5 \">\r\n        <input\r\n          name={name}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          pattern={pattern}\r\n          value={value}\r\n          className={[\r\n            'p-4 font-light text-lg text-theme-blue rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-theme-purple',\r\n            className,\r\n          ].join(' ')}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        {hasError && (\r\n          <span className=\"text-sm text-white bg-red-500 p-1 rounded\">\r\n            {hasError}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col mb-6 mx-2 lg:mx-5 \">\r\n      <input\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={[\r\n          'p-4 font-light text-lg text-theme-blue rounded border border-gray-400 focus:outline-none focus:ring-1 focus:ring-theme-purple',\r\n          className,\r\n        ].join(' ')}\r\n        onChange={onChange}\r\n        required\r\n      />\r\n      {hasError && (\r\n        <span className=\"text-sm text-white bg-red-500 p-1 rounded\">\r\n          {hasError}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nForm.defaultProps = {\r\n  errorResponse: 'Please match the requested format.',\r\n  type: '',\r\n  placeholder: '',\r\n  className: '',\r\n};\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  className: PropTypes.string,\r\n  errorResponse: PropTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}